services:
  db:
    image: 'postgres:alpine'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
  php:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TIMEZONE: ${TIMEZONE}
    command: bash -c "composer install && php bin/console doctrine:database:create --if-not-exists && php bin/console doctrine:migrations:migrate --no-interaction && php bin/console lexik:jwt:generate-keypair --skip-if-exists && php-fpm"
    volumes:
      - ./app:/var/www/symfony:cached
      - symfony_app_var:/var/www/symfony/var
      - symfony_app_vendor:/var/www/symfony/vendor
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MAILER_DSN: ${MAILER_DSN}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
  webserver:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/templates:/etc/nginx/templates
      - ./docker/upstream.conf:/etc/nginx/conf.d/upstream.conf
      - ./app:/var/www/symfony:cached
      - symfony_app_var:/var/www/symfony/var
      - symfony_app_vendor:/var/www/symfony/vendor
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MAILER_DSN: ${MAILER_DSN}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
  web:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      VITE_STRIPE_PUBLIC_KEY: pk_test_51PDMB7AsrguZorJQAmKw0BXA2sZ0zzpf26K8S5A84pq1XQwdbfxel5BXPHKAkK37OtViWpCLxHAR3JCli0hhvE0A00Rf8TKQy1
    volumes:
      - ./frontend:/app
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

volumes:
  symfony_app_var:
  symfony_app_vendor:
  db-data: